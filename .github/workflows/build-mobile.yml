name: Build Mobile Apps

on:
  # Build mobile apps only when:
  # 1. Manual trigger
  # 2. Mobile-related files change
  # 3. Version tags (releases)
  workflow_dispatch:
  push:
    tags: [ 'v*' ]
    paths:
      - 'capacitor.config.ts'
      - 'android/**'
      - 'ios/**'
      - '.github/workflows/build-mobile.yml'
      - 'package.json'

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create minimal web assets
        run: echo "App loads brasilita.com directly - no build needed"
      
      - name: Sync Capacitor
        run: npx cap sync android
      
      - name: Setup Android Keystore
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/brasilita.keystore
      
      - name: Build Android Debug APK
        if: "!startsWith(github.ref, 'refs/tags/v')"
        run: |
          cd android
          ./gradlew assembleDebug
      
      - name: Build Android Release APK
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd android
          ./gradlew assembleRelease
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      
      - name: Upload Android Debug APK
        if: "!startsWith(github.ref, 'refs/tags/v')"
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk
      
      - name: Upload Android Release APK
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: android-release-apk
          path: android/app/build/outputs/apk/release/*.apk

  build-ios:
    name: Build iOS IPA
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create minimal web assets
        run: echo "App loads brasilita.com directly - no build needed"
      
      - name: Sync Capacitor
        run: npx cap sync ios
      
      - name: Install CocoaPods
        run: |
          cd ios/App
          pod install
      
      - name: Setup iOS Certificates
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "${{ secrets.IOS_CERTIFICATE_BASE64 }}" | base64 -d > ios_certificate.p12
          echo "${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}" | base64 -d > ios_profile.mobileprovision
          # Import certificate and profile
          security create-keychain -p "" build.keychain
          security import ios_certificate.p12 -k build.keychain -P "${{ secrets.IOS_CERTIFICATE_PASSWORD }}" -A
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ios_profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
      
      - name: Build iOS Debug
        if: "!startsWith(github.ref, 'refs/tags/v')"
        run: |
          cd ios/App
          xcodebuild -workspace App.xcworkspace \
                     -scheme App \
                     -configuration Debug \
                     -destination 'generic/platform=iOS Simulator' \
                     -archivePath App.xcarchive \
                     archive
      
      - name: Build iOS Release
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd ios/App
          xcodebuild -workspace App.xcworkspace \
                     -scheme App \
                     -configuration Release \
                     -destination 'generic/platform=iOS' \
                     -archivePath App.xcarchive \
                     archive
      
      - name: Export iOS Debug
        if: "!startsWith(github.ref, 'refs/tags/v')"
        run: |
          cd ios/App
          xcodebuild -exportArchive \
                     -archivePath App.xcarchive \
                     -exportPath ./build \
                     -exportOptionsPlist ../../exportOptions.plist
      
      - name: Export iOS Release
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd ios/App
          xcodebuild -exportArchive \
                     -archivePath App.xcarchive \
                     -exportPath ./build \
                     -exportOptionsPlist ../../exportOptions.plist
      
      - name: Upload iOS Debug IPA
        if: "!startsWith(github.ref, 'refs/tags/v')"
        uses: actions/upload-artifact@v4
        with:
          name: ios-debug-ipa
          path: ios/App/build/*.ipa
      
      - name: Upload iOS Release IPA
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: ios-release-ipa
          path: ios/App/build/*.ipa

  build-release:
    name: Build Release APK
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create minimal web assets
        run: echo "App loads brasilita.com directly - no build needed"
      
      - name: Sync Capacitor
        run: npx cap sync android
      
      - name: Build Android Release APK
        run: |
          cd android
          ./gradlew assembleRelease
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            android/app/build/outputs/apk/release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}